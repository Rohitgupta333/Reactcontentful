{"version":3,"sources":["serviceWorker.js","Artical/ArticalListItem.js","Artical/service.js","Artical/ArticalList.js","Template/Header.js","Template/Footer.js","Artical/SingleArtical.js","index.js"],"names":["Boolean","window","location","hostname","match","ArticalListItem","article","this","props","console","log","react_default","a","createElement","className","src","fields","featureImage","file","url","href","slug","title","author","avatar","fullName","content","Component","client","createClient","space","accessToken","ArticalList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","articles","_this2","getEntries","content_type","then","response","setState","items","map","i","Artical_ArticalListItem","id","key","Header","HeaderData","Link","to","Footer","FooterData","SingleArtical","rohit","params","fields.slug","MainData","SingleDataMain","Data","index","render","BrowserRouter","Route","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe78fb7e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component, PropTypes } from \"react\";\r\n\r\nclass ArticalListItem extends Component {\r\n  render() {\r\n    const { article } = this.props;\r\n    console.log(article);\r\n    return (\r\n      <div className=\"ArticalListItem col-md-12\">\r\n        <section className=\"Post\">\r\n          <div className=\"banner\">\r\n            <img src={article.fields.featureImage.fields.file.url} />\r\n          </div>\r\n          <div className=\"details\">\r\n            <h2 className=\"title\">\r\n              <a href={article.fields.slug}>{article.fields.title}</a>\r\n            </h2>\r\n            <div className=\"author\">\r\n              <img src={article.fields.author.fields.avatar.fields.file.url} />\r\n              <strong>{article.fields.author.fields.fullName}</strong>\r\n            </div>\r\n            <p>{article.fields.content}</p>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticalListItem;\r\n","import {createClient} from 'contentful'\r\n\r\n\r\nconst client = createClient({\r\n    space: \"sfr9yqxtgjmb\",\r\n    accessToken: \"0e81a87cc7d7a653a793bebcb66480234d32fd4f652dc1d9d012ba55022dd3d0\"\r\n})\r\n\r\n\r\nexport default client;","import React, { Component } from \"react\";\r\nimport ArticalListItem from \"./ArticalListItem\";\r\nimport client from \"./service\";\r\n\r\nclass ArticalList extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      articles: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    client.getEntries({ content_type: \"post\" }).then(response => {\r\n      this.setState({ articles: response.items });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const articles = this.state.articles.map((article, i) => (\r\n      <ArticalListItem id={i} key={i} article={article} />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">{articles}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ArticalList;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      HeaderData: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"container\">\r\n          <nav className=\"menu\">\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\">About</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contact\">Contact</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      FooterData: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Footer\">\r\n        <div className=\"container\">\r\n          <span>Just FOr Leraning React js With Contentful</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport client from \"./service\";\r\n\r\nclass SingleArtical extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      article: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rohit = this.props.match.params.slug;\r\n\r\n    client\r\n      .getEntries({ content_type: \"post\", \"fields.slug\": rohit })\r\n      .then(response => {\r\n        this.setState({ article: response.items });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let MainData = this.state.article;\r\n    console.log(MainData);\r\n\r\n    const SingleDataMain = MainData.map((Data,index) => (\r\n      <div key=\"index\">\r\n        <div className=\"feature-banner\">\r\n          <img src={Data.fields.featureImage.fields.file.url} />\r\n        </div>\r\n        <div className=\"main-content\">\r\n          <div className=\"container\">\r\n            <h2>{Data.fields.title}</h2>\r\n            <div className=\"author\">\r\n              <img src={Data.fields.author.fields.avatar.fields.file.url} />\r\n              <strong>{Data.fields.author.fields.fullName}</strong>\r\n            </div>\r\n            <p>{Data.fields.content}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div className=\"single-page\">{SingleDataMain}</div>;\r\n  }\r\n}\r\n\r\nexport default SingleArtical;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ArticalList from \"./Artical/ArticalList\";\r\nimport Header from \"./Template/Header\";\r\nimport Footer from \"./Template/Footer\";\r\nimport SingleArtical from \"./Artical/SingleArtical\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './style.css';\r\n\r\nrender(\r\n  <Router>\r\n    <div>\r\n      <Route path=\"/\" component={Header} />\r\n      <div className=\"main\">\r\n        <Route exact path=\"/\" component={ArticalList} />\r\n        <Route path=\"/:slug\" component={SingleArtical} />\r\n      </div>\r\n      <Route path=\"/\" component={Footer} />\r\n    </div>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}